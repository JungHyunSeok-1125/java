package kr.ac.kopo.day11;

/*
 * abstract Class ==> 하나 이상의 abstract메소드 포함
 * 추상클래스는 설계 같은 부분 ==> 선언부에 내용을 정의하지 않았으므로 인스턴스 생성을 할 수 없다.
 * 인스턴스 객체 ==> 상속받은 객체를 통해서만 인스턴스를 생성할 수 있다.
 * 상위 클래스의 추상 메소드를 반드시 오버라이드 해주어야 한다.
 * 
 * 하나 이상의 추상 메소드를 포함하고 있는 클래스를 추상 클래스라고 한다.
 * 
 * 
 * 묵시적 형변환
 * 부모				자식 
 * Printer p = new LGPrinter()
 * 
 * p는 Printer만 가리키지만, 오버라이딩 된 객체에 접근할 수 있게 된다.
 * ==> Printer에 있는 메소드, 변수와  자식에 있는 오버라이딩된 메소드에만 접근 할 수 있다.
 *  	(자식에 있는 오버라이딩 되지 않은 메소드 혹은 멤버 변수에는 접근할 수 없다.)
 *  	부모 메소드를 활용, 자식 메소드의 오버라이딩 된 내용을 사용할 수 있는 느낌..
 *  
 * 명시적 형변환 
 * 자식 					부모
 * LGPrinter p = new Printer(); (X)
 * 
 * Printer p = new LGPrinter();
 * LGPrinter lg = (LGPrinter) p;
 * 
 * 명시적 형변환이 사용되기 위한 상위TYPE변수는 이미 묵시적 형변한이 이루어진 변쉬어야 한다.
 * 상위 타임을 미리 묵시적 형변환을 통해서 메모리를 만들어 주면
 * 명시적 형변환을 통해서 해당 형변환을 할 수 있도록 만들어 준다. 
 */
public class AbstractMain {

		
	
}
